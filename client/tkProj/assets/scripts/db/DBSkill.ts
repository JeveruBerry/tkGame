/** * @author python2ts.py * @description auto built *  */export interface IDBSkill {     id:number,     name:string,     atkFrame:Array<string>,     atk:number,     totalFrame:number,     beforeFrame:number,     effect:Array<string>,     extScript:string,     extInfo:Array<string>,     filter:number,     skillInfo:string,}let tmpDb:{[index:string]:IDBSkill} = {   "1":{id:1,name:"曹操普攻",atkFrame:["5"],atk:1,totalFrame:10,beforeFrame:0,effect:[],extScript:"Skill_CC_Normal",extInfo:[],filter:1,skillInfo:"攻击正前方角色"},   "2":{id:2,name:"曹操小技能",atkFrame:["5"],atk:2,totalFrame:10,beforeFrame:0,effect:[],extScript:"Skill_CC_Small",extInfo:[],filter:1,skillInfo:"战场上每死一角色，操作攻击力+50%，持续一回合，可叠加，可驱散"},   "3":{id:3,name:"曹操大招",atkFrame:["5"],atk:3,totalFrame:15,beforeFrame:0,effect:[],extScript:"Skill_CC_Big",extInfo:[],filter:1,skillInfo:"攻击横排距离为<=2的角色，若没敌人，攻击衰减50%"},   "4":{id:4,name:"曹操被动",atkFrame:["5"],atk:4,totalFrame:16,beforeFrame:0,effect:[],extScript:"Skill_CC_Passive",extInfo:[],filter:1,skillInfo:"横竖距离<=2的角色使用嘲讽技能，并提高自身50%防御力，持续一回合。"},   "5":{id:5,name:"曹操光环",atkFrame:["5"],atk:5,totalFrame:15,beforeFrame:0,effect:[],extScript:"Skill_CC_Aura",extInfo:[],filter:1,skillInfo:"竖排攻击"},   "6":{id:6,name:"典韦普攻",atkFrame:["5"],atk:6,totalFrame:10,beforeFrame:0,effect:[],extScript:"Skill_DW_Normal",extInfo:[],filter:1,skillInfo:"对敌方随机一角色释放buff，使其两一回合内承受100%额外伤害，可驱散"},   "7":{id:7,name:"典韦小技能",atkFrame:["5"],atk:7,totalFrame:10,beforeFrame:0,effect:[],extScript:"Skill_DW_Small",extInfo:[],filter:1,skillInfo:"攻击恢复自身伤害15%的血量"},   "8":{id:8,name:"典韦大招",atkFrame:["5"],atk:8,totalFrame:15,beforeFrame:0,effect:[],extScript:"Skill_DW_Big",extInfo:[],filter:1,skillInfo:"每受到一次伤害，增加15%防御力，持续2回合，可叠加，可驱散"},   "9":{id:9,name:"典韦被动",atkFrame:["5"],atk:9,totalFrame:16,beforeFrame:0,effect:[],extScript:"Skill_DW_Passive",extInfo:[],filter:1,skillInfo:"test"},   "10":{id:10,name:"典韦光环",atkFrame:["5"],atk:10,totalFrame:15,beforeFrame:0,effect:[],extScript:"Skill_DW_Aura",extInfo:[],filter:1,skillInfo:"test2"},};export class DBSkill {    static _instance:DBSkill;    static getInstance():DBSkill{        if( DBSkill._instance == null ){            DBSkill._instance = new DBSkill();        }        return DBSkill._instance;    }    private readonly _db:{[index:string]:IDBSkill} = null;    constructor(){        this._db = tmpDb;    }    getDBSkillById(id:string):IDBSkill{        return this._db[id];    }    getAllDBSkill(){        return this._db;    }}